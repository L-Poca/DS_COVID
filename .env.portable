# ===================================
# CONFIGURATION PORTABLE - PROJET DS_COVID
# ===================================
# Ce fichier utilise des chemins relatifs portables
# Date: 15 octobre 2025
# Version: Portable

# ===================================
# CHEMINS DU PROJET (RELATIFS - PORTABLES)
# ===================================
# Tous les chemins sont relatifs à la racine du projet
# Fonctionne sur tous les systèmes (Windows, Linux, macOS)
PROJECT_ROOT=.
DATA_DIR=./data/raw/COVID-19_Radiography_Dataset/COVID-19_Radiography_Dataset
MODELS_DIR=./models
RESULTS_DIR=./reports
NOTEBOOKS_DIR=./notebooks

# ===================================
# PARAMÈTRES D'ENTRAÎNEMENT
# ===================================
# Configuration adaptable selon les ressources
IMG_WIDTH=224
IMG_HEIGHT=224
IMG_CHANNELS=3

# Batch size - ajustez selon votre RAM/GPU
# 32 = standard, 16 = GPU limité, 64+ = GPU puissant
BATCH_SIZE=32

# Époques - ajustez selon vos besoins
# 10-20 = tests rapides, 50+ = entraînement complet
EPOCHS=50

# Learning rate standard pour transfer learning
LEARNING_RATE=0.001

# Splits de validation et test
VALIDATION_SPLIT=0.2
TEST_SPLIT=0.2

# ===================================
# CLASSES DU DATASET COVID-19
# ===================================
CLASS_NAMES=COVID,Lung_Opacity,Normal,Viral Pneumonia
NUM_CLASSES=4

# ===================================
# HYPERPARAMÈTRES ML - BASELINE
# ===================================
# Random Forest
RF_N_ESTIMATORS=200
RF_MAX_DEPTH=15
RF_MIN_SAMPLES_SPLIT=5
RF_MIN_SAMPLES_LEAF=2

# XGBoost
XGB_N_ESTIMATORS=100
XGB_LEARNING_RATE=0.1
XGB_MAX_DEPTH=3
XGB_MIN_CHILD_WEIGHT=1

# Cross-validation
CV_FOLDS=3
N_JOBS=-1

# ===================================
# DEEP LEARNING - TRANSFER LEARNING
# ===================================
PRETRAINED_WEIGHTS=imagenet
FREEZE_BASE_LAYERS=True
FINE_TUNE_LAYERS=10

# ===================================
# CALLBACKS D'ENTRAÎNEMENT
# ===================================
EARLY_STOPPING_PATIENCE=10
REDUCE_LR_PATIENCE=5
REDUCE_LR_FACTOR=0.5
MIN_LR=1e-7

# ===================================
# OPTIMISATION PERFORMANCE
# ===================================
# GPU/CPU (laissez vide pour auto-détection)
TF_ENABLE_ONEDNN_OPTS=0
CUDA_VISIBLE_DEVICES=

# Gestion mémoire - ajustez selon vos ressources
# 1000 = standard, 500 = RAM limitée, 2000+ = serveur
MAX_IMAGES_PER_CLASS=1000
SAMPLE_SIZE_ANALYSIS=200

# ===================================
# DEBUG ET REPRODUCTIBILITÉ
# ===================================
LOG_LEVEL=INFO
VERBOSE=1
RANDOM_SEED=42

# ===================================
# VISUALISATION
# ===================================
PLOT_STYLE=seaborn-v0_8
COLOR_PALETTE=husl
FIGURE_SIZE_WIDTH=12
FIGURE_SIZE_HEIGHT=8
DPI=100

# ===================================
# EXPORT ET SAUVEGARDE
# ===================================
MODEL_SAVE_FORMAT=h5
RESULTS_FORMAT=csv
EXPORT_PREDICTIONS=True
SAVE_PLOTS=True

# ===================================
# NOTES D'UTILISATION
# ===================================
# 1. Ce fichier fonctionne avec des chemins relatifs
# 2. Adaptez BATCH_SIZE selon votre GPU/RAM
# 3. Réduisez EPOCHS pour des tests rapides
# 4. Augmentez MAX_IMAGES_PER_CLASS si vous avez assez de RAM
# 5. Les chemins sont automatiquement résolus par config.py